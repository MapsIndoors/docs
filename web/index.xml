<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Webs on MapsIndoors Developers</title>
    <link>https://mapsindoors.github.io/web/</link>
    <description>Recent content in Webs on MapsIndoors Developers</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <copyright>MapsIndoors (c)2017</copyright>
    
	<atom:link href="https://mapsindoors.github.io/web/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>MapsIndoors for Web - Getting started</title>
      <link>https://mapsindoors.github.io/web/changelog/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://mapsindoors.github.io/web/changelog/</guid>
      <description>Basic Example You will find in the link an up and running project that contains the minimum code to start a MapsIndoors project. You can only run the project inside a web server, it&amp;rsquo;s already inside a static nodejs server so you have to install nodejs and npm before, then run :
npm install  Then
node app.js  You can also follow the steps below to start your app from scratch or to enhance the Basic Example, more advanced feature will be explained in the part 2 of this tutorial with a demo app that gives a showcase of the mapsIndoors in a complete app that you can test also.</description>
    </item>
    
    <item>
      <title>MapsIndoors for Web - Getting started</title>
      <link>https://mapsindoors.github.io/web/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://mapsindoors.github.io/web/</guid>
      <description>Basic Example You will find in the link an up and running project that contains the minimum code to start a MapsIndoors project. You can only run the project inside a web server, it&amp;rsquo;s already inside a static nodejs server so you have to install nodejs and npm before, then run :
npm install  Then
node app.js  You can also follow the steps below to start your app from scratch or to enhance the Basic Example, more advanced feature will be explained in the part 2 of this tutorial with a demo app that gives a showcase of the mapsIndoors in a complete app that you can test also.</description>
    </item>
    
    <item>
      <title>MapsIndoors for Web - Part 2</title>
      <link>https://mapsindoors.github.io/web/guide-part2/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://mapsindoors.github.io/web/guide-part2/</guid>
      <description>Trying the Showcase Web App A showcase app is available on GitHub, free to use and adapt to your needs.
To try it out right away: Make sure nodejs, npm and gulp is installed on your system Using a terminal/shell in the project folder, run the following commands:
 npm install -g browser-sync gulp build browser-sync start &amp;ndash;server If on Windows and prompted, allow server to use your PC network Open your browser at http://localhost:3000/app (or whatever port browser-sync chooses per default)  Create a Search and Suggestions box If you need to facilitate search functionality to your MapsIndoors solution, you can use the Suggestions UI component.</description>
    </item>
    
    <item>
      <title>MapsIndoors for Web - Reference Guide</title>
      <link>https://mapsindoors.github.io/web/reference/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://mapsindoors.github.io/web/reference/</guid>
      <description>MapsIndoors mapsindoors.MapsIndoors(opts:MapsIndoorsOptions)
Methods clear() find(args:string|FindOptions) : Promise(Location) fitBuilding(buildingId:string) fitVenue(venueId?:string) getBuilding() : Building getDisplayRule(type:string) : DisplayRuleLiteral getFloor() : number getLocationsVisible() : bool getMap() : google.maps.Map getStyles() : VenueStyle[] getVenue() : Venue setDisplayRule(rule: DisplayRuleLiteral) setLanguage(language:string) setFloor(floor:number) setMap(map:google.maps.Map) setStyle(style:string) //style folder setVenue(venue:string|Venue) locate(options:locateOptions)  Events  ready map_changed floor_changed building_changed venue_changed style_changed locations_visible_cshanged location_click  MapsIndoorsOptions Literal MapsIndoorsOptions { map: google.maps.Map, floor: number, locationVisible: boolean }  DisplayRule Literal DisplayRule { from?: number, to?</description>
    </item>
    
  </channel>
</rss>